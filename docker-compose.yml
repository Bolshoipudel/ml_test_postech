version: '3.8'

services:
  # FastAPI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: llm-assistant-app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - POSTGRES_HOST=postgres
    env_file:
      - .env
    volumes:
      - ./app:/app/app
      - ./data:/app/data
      - ./logs:/app/logs
      - ./chroma_db:/app/chroma_db
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - llm-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: llm-assistant-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - llm-network
    restart: unless-stopped

  # Ollama (Optional - for local LLM)
  # Uncomment to use local LLMs
  # ollama:
  #   image: ollama/ollama:latest
  #   container_name: llm-assistant-ollama
  #   ports:
  #     - "11434:11434"
  #   volumes:
  #     - ollama_data:/root/.ollama
  #   networks:
  #     - llm-network
  #   restart: unless-stopped

  # pgAdmin (Optional - for database management)
  # Uncomment if you want a web UI for PostgreSQL
  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   container_name: llm-assistant-pgadmin
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=admin@example.com
  #     - PGADMIN_DEFAULT_PASSWORD=admin
  #   ports:
  #     - "5050:80"
  #   networks:
  #     - llm-network
  #   restart: unless-stopped

networks:
  llm-network:
    driver: bridge

volumes:
  postgres_data:
  chroma_data:
  # ollama_data:  # Uncomment if using Ollama